package Protos;

message Ability {
   optional string id = 1 [default = ""];
   optional string name_key = 2 [default = ""];
   optional string desc_key = 3 [default = ""];
   optional string prefab_name = 5 [default = ""];
   repeated BattleCondition trigger_condition = 6;
   optional string stacking_line_override = 8 [default = ""];
   repeated AbilityTier tier = 9;
   optional int32 cooldown = 11 [default = 0];
   optional string icon = 13 [default = ""];
   optional string apply_type_tooltip_key = 14 [default = ""];
   repeated EffectTag descriptive_tag = 15;
   repeated EffectReference effect_reference = 17;
   optional MessageDialog confirmation_message = 18;
   optional AbilityButtonLocationType button_location = 19 [default = ABILITY_STANDARD];
   optional string short_desc_key = 20 [default = ""];
}
enum AbilityButtonLocationType {
   ABILITY_STANDARD = 1;
   ABILITY_ADDITIONAL = 2;
   ABILITY_HIDDEN = 3;
}
message AbilityReference {
   optional string ability_id = 1 [default = ""];
   optional UnitTier required_tier = 2 [default = TIER_01];
   optional Rarity required_rarity = 3 [default = ONE_STAR];
}
message AbilityTier {
   optional string desc_key = 1 [default = ""];
   optional string upgrade_desc_key = 2 [default = ""];
   optional int32 cooldown_override = 5 [default = 0];
   repeated EffectReference effect_reference = 6;
}
message BattleCondition {
   optional ConditionType condition_type = 1 [default = ROUND_COUNT];
   optional string condition_value = 2 [default = ""];
}
enum CombatType {
   CHARACTER = 1;
   SHIP = 2;
}
enum ConditionType {
   ROUND_COUNT = 1;
   END_OF_ROUND = 2;
   START_OF_ROUND = 3;
   START_OF_BATTLE = 4;
   CHANCE = 5;
   START_OF_ENCOUNTER = 7;
   CRIT = 8;
   RECEIVE_CRIT = 9;
   PERFORM_MOVE = 10;
   ATTACK = 11;
   LIMIT_BREAK = 12;
   RECEIVE_DAMAGE = 13;
   RECEIVE_HEAL = 14;
   COMBO = 15;
   RECEIVE_COMBO = 16;
   KILL = 17;
   REVIVE = 18;
   ENEMY_KILLED = 19;
   ALLY_KILLED = 20;
   DEATH = 21;
   ALLY_REVIVED = 22;
   ENEMY_REVIVED = 23;
   END_OF_ENCOUNTER = 24;
   START_OF_TURN = 25;
   HEALTH_DECREASE = 26;
   HEALTH_INCREASE = 27;
   PERSISTENT_EFFECT_ADD = 28;
   PERSISTENT_EFFECT_REMOVE = 29;
   DODGED = 30;
   WAS_DODGED = 31;
   END_OF_TURN = 32;
   RESISTED = 33;
   WAS_RESISTED = 34;
   START_MOVE = 35;
   START_ATTACK = 36;
   START_LIMIT_BREAK = 37;
   PRE_EFFECT_EVAL = 38;
   RECEIVE_PRE_EFFECT_EVAL = 39;
   POST_EFFECT_EVAL = 40;
   RECEIVE_POST_EFFECT_EVAL = 41;
   PRE_EVASION_EVAL = 42;
   RECEIVE_PRE_EVASION_EVAL = 43;
   POST_EVASION_EVAL = 44;
   RECEIVE_POST_EVASION_EVAL = 45;
   START_OF_GUILD_RAID_FOR_PLAYER = 46;
   START_OF_GUILD_RAID_ENCOUNTER_FOR_PLAYER = 47;
   PRE_RECEIVE_DAMAGE = 48;
   FULL_TURN_COMPLETE = 49;
   PERSISTENT_EFFECT_ADD_INSTANCE = 50;
   PERSISTENT_EFFECT_REMOVE_INSTANCE = 51;
   FLED = 52;
   ALLY_FLED = 53;
   ENEMY_FLED = 54;
}
message CrewGroupSlotDef {
   optional int32 max_size = 1 [default = 0];
   optional Rarity rarity_requirement = 2 [default = NO_STAR];
   optional string name_key = 3 [default = ""];
   optional string stat_table_id = 4 [default = ""];
}
message CrewMember {
   optional string unit_id = 1 [default = ""];
   optional int32 slot = 2 [default = 0];
   repeated SkillDefinitionReference skill_reference = 3;
}
message EffectReference {
   optional string id = 1 [default = ""];
   repeated int32 context_index = 2;
   optional int32 max_bonus_move = 3 [default = 0];
}
message EffectTag {
   optional string tag = 1 [default = ""];
}
enum ForceAlignment {
   NEUTRAL = 1;
   LIGHT = 2;
   DARK = 3;
}
message MessageDialog {
   optional string title_key = 1 [default = ""];
   optional string desc_key = 2 [default = ""];
}
enum Rarity {
   ONE_STAR = 1;
   TWO_STAR = 2;
   THREE_STAR = 3;
   FOUR_STAR = 4;
   FIVE_STAR = 5;
   SIX_STAR = 6;
   SEVEN_STAR = 7;
   NO_STAR = 8;
}
message SkillDefinitionReference {
   optional string skill_id = 1 [default = ""];
   optional UnitTier required_tier = 3 [default = TIER_01];
   optional Rarity required_rarity = 4 [default = NO_STAR];
}
message Stat {
   optional string stat_id = 1 [default = ""];
   optional UnitStat unit_stat_id = 3 [default = UNIT_STAT_MAX_HEALTH];
   optional int32 stat_value_decimal_old = 4 [default = 0];
   optional int64 stat_value_decimal = 5 [default = 0];
}
message StatDef {
   repeated Stat stat = 19;
}
enum ThreatLevel {
   NORMAL = 1;
   ELITE = 2;
   BOSS = 3;
   ANY = 4;
}
enum UnitClass {
   WARRIOR = 1;
   TACTICIAN = 2;
   SCOUNDREL = 3;
   LIGHT_FORCE = 4;
   DARK_FORCE = 5;
   UNITCLASS_STANDARD = 6;
   UNITCLASS_COMMANDER = 7;
}
message UnitDef {
   optional string id = 1 [default = ""];
   optional string unit_prefab = 2 [default = ""];
   optional string thumbnail_name = 3 [default = ""];
   optional string name_key = 4 [default = ""];
   optional Rarity rarity = 11 [default = NO_STAR];
   optional Rarity max_rarity = 12 [default = NO_STAR];
   optional ForceAlignment force_alignment = 13 [default = NEUTRAL];
   optional string xp_table_id = 14 [default = ""];
   optional int32 action_count_min = 17 [default = 0];
   optional int32 action_count_max = 18 [default = 0];
   optional CombatType combat_type = 19 [default = CHARACTER];
   optional string desc_key = 21 [default = ""];
   optional ThreatLevel threat_level = 24 [default = NORMAL];
   optional bool obtainable = 25 [default = false];
   optional string base_id = 26 [default = ""];
   optional string promotion_recipe_reference = 27 [default = ""];
   repeated CrewGroupSlotDef crew_group_slot = 28;
   optional string stat_progression_id = 33 [default = ""];
   repeated string category_id = 34;
   optional int32 training_xp_worth_base_value_override = 36 [default = 0];
   optional int32 max_level_override = 38 [default = 0];
   optional int32 training_cost_multiplier_override = 39 [default = 0];
   optional string creation_recipe_reference = 41 [default = ""];
   repeated SkillDefinitionReference skill_reference = 42;
   optional int32 base_power = 43 [default = 0];
   optional StatDef base_stat = 50;
   optional string primary_stat = 51 [default = ""];
   repeated UnitTierDef unit_tier = 52;
   optional Ability basic_attack = 53;
   optional Ability leader_ability = 54;
   repeated Ability limit_break = 55;
   repeated Ability unique_ability = 56;
   repeated Ability crew_ability = 57;
   repeated Ability crew_unique_ability = 58;
   optional AbilityReference basic_attack_ref = 59;
   optional AbilityReference leader_ability_ref = 60;
   repeated AbilityReference limit_break_ref = 61;
   repeated AbilityReference unique_ability_ref = 62;
   repeated AbilityReference crew_ability_ref = 63;
   repeated AbilityReference crew_unique_ability_ref = 64;
   optional UnitStat primary_unit_stat = 65 [default = UNIT_STAT_MAX_HEALTH];
   optional int64 obtainable_time = 66 [default = 0];
   repeated CrewMember crew = 67;
   optional int32 command_cost = 68 [default = 0];
   optional string crew_contribution_table_id = 69 [default = ""];
   optional UnitClass unitClass = 70 [default = WARRIOR];
}
enum UnitStat {
   UNIT_STAT_MAX_HEALTH = 1;
   UNIT_STAT_STRENGTH = 2;
   UNIT_STAT_AGILITY = 3;
   UNIT_STAT_INTELLIGENCE = 4;
   UNIT_STAT_SPEED = 5;
   UNIT_STAT_ATTACK_DAMAGE = 6;
   UNIT_STAT_ABILITY_POWER = 7;
   UNIT_STAT_ARMOR = 8;
   UNIT_STAT_SUPPRESSION = 9;
   UNIT_STAT_ARMOR_PENETRATION = 10;
   UNIT_STAT_SUPPRESSION_PENETRATION = 11;
   UNIT_STAT_DODGE_RATING = 12;
   UNIT_STAT_DEFLECTION_RATING = 13;
   UNIT_STAT_ATTACK_CRITICAL_RATING = 14;
   UNIT_STAT_ABILITY_CRITICAL_RATING = 15;
   UNIT_STAT_CRITICAL_DAMAGE = 16;
   UNIT_STAT_ACCURACY = 17;
   UNIT_STAT_RESISTANCE = 18;
   UNIT_STAT_DODGE_PERCENT_ADDITIVE = 19;
   UNIT_STAT_DEFLECTION_PERCENT_ADDITIVE = 20;
   UNIT_STAT_ATTACK_CRITICAL_PERCENT_ADDITIVE = 21;
   UNIT_STAT_ABILITY_CRITICAL_PERCENT_ADDITIVE = 22;
   UNIT_STAT_ARMOR_PERCENT_ADDITIVE = 23;
   UNIT_STAT_SUPPRESSION_PERCENT_ADDITIVE = 24;
   UNIT_STAT_ARMOR_PENETRATION_PERCENT_ADDITIVE = 25;
   UNIT_STAT_SUPPRESSION_PENETRATION_PERCENT_ADDITIVE = 26;
   UNIT_STAT_HEALTH_STEAL = 27;
   UNIT_STAT_MAX_SHIELD = 28;
   UNIT_STAT_SHIELD_PENETRATION = 29;
   UNIT_STAT_HEALTH_REGEN = 30;
   UNIT_STAT_ATTACK_DAMAGE_PERCENT_ADDITIVE = 31;
   UNIT_STAT_ABILITY_POWER_PERCENT_ADDITIVE = 32;
   UNIT_STAT_DODGE_NEGATE_PERCENT_ADDITIVE = 33;
   UNIT_STAT_DEFLECTION_NEGATE_PERCENT_ADDITIVE = 34;
   UNIT_STAT_ATTACK_CRITICAL_NEGATE_PERCENT_ADDITIVE = 35;
   UNIT_STAT_ABILITY_CRITICAL_NEGATE_PERCENT_ADDITIVE = 36;
   UNIT_STAT_DODGE_NEGATE_RATING = 37;
   UNIT_STAT_DEFLECTION_NEGATE_RATING = 38;
   UNIT_STAT_ATTACK_CRITICAL_NEGATE_RATING = 39;
   UNIT_STAT_ABILITY_CRITICAL_NEGATE_RATING = 40;
   UNIT_STAT_OFFENSE = 41;
   UNIT_STAT_DEFENSE = 42;
   UNIT_STAT_DEFENSE_PENETRATION = 43;
   UNIT_STAT_EVASION_RATING = 44;
   UNIT_STAT_CRITICAL_RATING = 45;
   UNIT_STAT_EVASION_NEGATE_RATING = 46;
   UNIT_STAT_CRITICAL_NEGATE_RATING = 47;
   UNIT_STAT_OFFENSE_PERCENT_ADDITIVE = 48;
   UNIT_STAT_DEFENSE_PERCENT_ADDITIVE = 49;
   UNIT_STAT_DEFENSE_PENETRATION_PERCENT_ADDITIVE = 50;
   UNIT_STAT_EVASION_PERCENT_ADDITIVE = 51;
   UNIT_STAT_EVASION_NEGATE_PERCENT_ADDITIVE = 52;
   UNIT_STAT_CRITICAL_CHANCE_PERCENT_ADDITIVE = 53;
   UNIT_STAT_CRITICAL_NEGATE_CHANCE_PERCENT_ADDITIVE = 54;
   UNIT_STAT_MAX_HEALTH_PERCENT_ADDITIVE = 55;
   UNIT_STAT_MAX_SHIELD_PERCENT_ADDITIVE = 56;
   UNIT_STAT_SPEED_PERCENT_ADDITIVE = 57;
   UNIT_STAT_COUNTER_ATTACK_RATING = 58;
   UNIT_STAT_TAUNT = 59;
}
enum UnitTier {
   TIER_01 = 1;
   TIER_02 = 2;
   TIER_03 = 3;
   TIER_04 = 4;
   TIER_05 = 5;
   TIER_06 = 6;
   TIER_07 = 7;
   TIER_08 = 8;
   TIER_09 = 9;
   TIER_10 = 10;
   TIER_11 = 11;
   TIER_12 = 12;
   TIER_13 = 13;
   TIER_14 = 14;
   TIER_15 = 15;
   TIER_16 = 16;
   TIER_17 = 17;
   TIER_18 = 18;
   TIER_19 = 19;
   TIER_20 = 20;
}
message UnitTierDef {
   optional UnitTier tier = 1 [default = TIER_01];
   repeated string equipment_set = 2;
   optional StatDef base_stat = 3;
}
