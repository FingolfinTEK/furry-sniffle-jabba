package Protos;

message BattleAction {
   optional int32 record_index = 1 [default = 0];
   optional BattleMoveRecord battle_move_record = 2;
}
message BattleData {
   optional int32 battle_seed = 1 [default = 0];
   repeated BattleEncounter battle_encounter = 4;
   repeated BucketItem completion_reward = 6;
   optional int32 targeting_seed = 9 [default = 0];
   optional int32 encounter_index = 10 [default = 0];
}
message BattleEncounter {
   optional Squad squad = 1;
   repeated BattleUnitState unit_state = 2;
}
message BattleEvent {
   optional BattleFinishRequest battle_finish_request = 1;
   optional MatchedPlayer matched_player = 2;
}
message BattleFinishRequest {
   repeated BattleRound battle_round = 1;
   optional BattleState battle_state = 2;
   optional BattleOutcome battle_outcome = 3 [default = LOSS];
   optional bool is_editor = 5 [default = false];
   optional bool battle_timed_out = 6 [default = false];
   optional BattleType type = 7 [default = PVE_BATTLE];
   repeated BattleRecord battle_record = 8;
}
message BattleMoveRecord {
   optional string source_unit_id = 1 [default = ""];
   repeated BattleTarget target = 2;
   optional bool crit = 4 [default = false];
   optional bool encounter_completed = 5 [default = false];
   optional bool weakAgainst = 7 [default = false];
   optional bool strongAgainst = 8 [default = false];
   optional MoveType move_type = 9 [default = MOVETYPE_NONE];
   optional bool hitSuccess = 10 [default = false];
   optional EffectApplyType apply_type = 11 [default = UNAVOIDABLE];
   optional EffectDamageType damage_type = 12 [default = UNMITIGABLE];
   optional string source_damage = 13 [default = ""];
   optional string crit_damage = 14 [default = ""];
   optional string mitigation = 15 [default = ""];
   optional string applied_effect_id = 16 [default = ""];
   optional string ability_id = 17 [default = ""];
}
enum BattleOutcome {
   WIN = 1;
   LOSS = 2;
   RETREAT = 3;
   DRAW = 4;
}
message BattleRecord {
   optional BattleRecordType record_type = 1 [default = BATTLE_RECORD_ABILITY];
   optional int64 timestamp = 2 [default = 0];
   optional string source_unit_id = 3 [default = ""];
   repeated string target_unit_ids = 4;
   optional string ability_id = 5 [default = ""];
   optional string effect_id = 6 [default = ""];
   optional string damage_amount = 7 [default = ""];
   optional string recovery_type = 8 [default = ""];
   optional string recovery_amount = 9 [default = ""];
   optional bool is_crit = 10 [default = false];
   optional bool auto_battle_on = 11 [default = false];
   optional int32 encounter_index = 12 [default = 0];
   optional string excess_damage_amount = 13 [default = ""];
   optional string excess_recovery_amount = 14 [default = ""];
}
enum BattleRecordType {
   BATTLE_RECORD_ABILITY = 1;
   BATTLE_RECORD_CONDITION = 2;
   BATTLE_RECORD_DAMAGE = 3;
   BATTLE_RECORD_EFFECT_APPLIED = 4;
   BATTLE_RECORD_EFFECT_EXPIRED = 5;
   BATTLE_RECORD_EFFECT = 6;
   BATTLE_RECORD_PLAYER_AUTO_TOGGLE = 7;
   BATTLE_RECORD_PLAYER_MANUAL_ABILITY = 8;
   BATTLE_RECORD_PLAYER_MANUAL_SELECT = 9;
   BATTLE_RECORD_RECOVERY = 10;
   BATTLE_RECORD_ENCOUNTER_START = 11;
   BATTLE_RECORD_ENCOUNTER_END = 12;
}
message BattleRound {
   repeated BattleTurn battle_turn = 1;
}
message BattleState {
   optional int32 encounter_sequence_number = 3 [default = 0];
   optional BattleData battle_data = 4;
   repeated BattleUnitState opponent_state = 5;
   repeated BattleUnitState player_state = 6;
}
message BattleTarget {
   optional string unit_id = 1 [default = ""];
   optional int32 health_delta = 2 [default = 0];
   optional int64 amount_decimal = 4 [default = 0];
}
enum BattleTargetingTactic {
   TARGET_RANDOM = 1;
   TARGET_RANDOM_SWITCH = 2;
   TARGET_RANDOM_OVERKILL = 3;
   TARGET_RANDOM_WEIGHTED_SWITCH = 4;
}
message BattleTurn {
   optional BattleTurnOwner battle_turn_owner = 1 [default = PLAYER];
   repeated BattleAction battle_action = 2;
}
enum BattleTurnOwner {
   PLAYER = 1;
   OPPONENT = 2;
}
enum BattleType {
   PVE_BATTLE = 1;
   PVP_BATTLE = 2;
   WAR_BATTLE = 3;
   GUILD_RAID_BATTLE = 4;
}
message BattleUnitAbilityState {
   optional string ability_id = 1 [default = ""];
   optional int32 cooldown = 2 [default = 0];
}
message BattleUnitState {
   optional string unit_id = 1 [default = ""];
   optional string health_percent = 5 [default = ""];
   repeated BattleUnitAbilityState ability_state = 6;
   optional bool progress_item = 7 [default = false];
   optional int64 current_health = 8 [default = 0];
   optional string shield_percent = 9 [default = ""];
   optional string turn_percent = 10 [default = ""];
   optional int64 max_health = 11 [default = 0];
   optional bool has_fled = 12 [default = false];
   optional int64 max_shield = 13 [default = 0];
}
message BucketItem {
   optional string id = 1 [default = ""];
   optional ItemType type = 2 [default = EMPTY];
   optional int32 weight = 3 [default = 0];
   optional int32 minQuantity = 4 [default = 0];
   optional int32 maxQuantity = 5 [default = 0];
   optional Rarity rarity = 6 [default = ONE_STAR];
   optional StatMod stat_mod = 7;
}
message CrewGroup {
   repeated CrewGroupMember crew_group_member = 1;
   optional int32 crew_slot = 2 [default = 0];
}
message CrewGroupMember {
   optional string unit_id = 2 [default = ""];
   optional Unit unit = 3;
}
message CurrencyItem {
   optional CurrencyType currency = 1 [default = GRIND];
   optional int32 quantity = 2 [default = 0];
}
enum CurrencyType {
   GRIND = 1;
   PREMIUM = 2;
   REAL_MONEY = 3;
   SOCIAL = 4;
   IGC_EVENT_KEYCARD = 8;
   XP_EVENT_KEYCARD = 9;
   PVP_CURRENCY = 10;
   FORCE_POINT = 11;
   PVP_SHIP_CURRENCY = 12;
   FREE = 13;
   WAR_SHIP_CURRENCY = 14;
   GRIND_TICKET = 15;
   SHARD_CURRENCY = 16;
   GUILD_CURRENCY = 17;
   GUILD_BANK_CURRENCY = 18;
   SHIP_GRIND = 19;
   GUILD_RAID_CURRENCY_01 = 20;
   GUILD_RAID_CURRENCY_02 = 21;
   GUILD_RAID_CURRENCY_03 = 22;
   GUILD_RAID_CURRENCY_04 = 23;
   GUILD_RAID_CURRENCY_05 = 24;
   GUILD_RAID_CURRENCY_06 = 25;
   GUILD_RAID_CURRENCY_07 = 26;
   GUILD_RAID_CURRENCY_08 = 27;
   GUILD_RAID_CURRENCY_09 = 28;
   GUILD_RAID_CURRENCY_10 = 29;
   GUILD_RAID_CURRENCY_11 = 30;
   GUILD_RAID_CURRENCY_12 = 31;
}
enum EffectApplyType {
   UNAVOIDABLE = 1;
   PHYSICAL = 2;
   MENTAL = 3;
}
enum EffectDamageType {
   UNMITIGABLE = 1;
   ATTACK_DAMAGE = 2;
   ABILITY_POWER = 3;
}
message EquipmentSlot {
   optional string equipment_id = 1 [default = ""];
   optional int32 slot = 2 [default = 0];
}
enum ItemType {
   EMPTY = 1;
   UNIT = 2;
   CURRENCY = 3;
   BUCKET = 4;
   CONSUMABLE = 5;
   XP = 6;
   MATERIAL = 7;
   ENERGY = 8;
   UNIT_SHARD = 9;
   RECIPE = 10;
   EQUIPMENT = 11;
   EVENT_KEYCARD = 12;
   POWERUP_BUNDLE = 13;
   MYSTERY_BOX = 14;
   STAT_MOD = 15;
   MYSTERY_STAT_MOD = 16;
}
message LeaderboardStatus {
   optional int32 rank = 1 [default = 0];
   optional int32 rank_delta = 2 [default = 0];
   optional int32 score = 3 [default = 0];
   optional int32 score_delta = 4 [default = 0];
}
message MatchedPlayer {
   optional string id = 1 [default = ""];
   optional string player_name = 2 [default = ""];
   optional int32 level = 3 [default = 0];
   repeated Unit squad_unit = 4;
   optional int32 power = 6 [default = 0];
   optional int32 rank = 7 [default = 0];
   optional LeaderboardStatus opponent_status = 8;
   optional MatchedPlayerScoreConfig score_config = 9;
}
message MatchedPlayerScoreConfig {
   optional int32 points_per_enemy_defeated = 1 [default = 0];
   optional int32 points_per_ally_survivor = 2 [default = 0];
}
enum MoveType {
   MOVETYPE_ATTACK = 1;
   MOVETYPE_LIMIT_BREAK = 2;
   MOVETYPE_CRYSTAL = 3;
   MOVETYPE_NONE = 4;
   MOVETYPE_LEADER_ABILITY = 5;
   MOVETYPE_CONSUMABLE = 6;
}
enum Rarity {
   ONE_STAR = 1;
   TWO_STAR = 2;
   THREE_STAR = 3;
   FOUR_STAR = 4;
   FIVE_STAR = 5;
   SIX_STAR = 6;
   SEVEN_STAR = 7;
   NO_STAR = 8;
}
message Skill {
   optional string id = 1 [default = ""];
   optional int32 tier = 2 [default = 0];
}
message Squad {
   repeated SquadCell cell = 1;
   optional BattleTargetingTactic targeting_tactic = 3 [default = TARGET_RANDOM];
   optional SquadType squad_type = 4 [default = SQUAD_NEUTRAL];
   optional string targeting_set_id = 5 [default = ""];
   optional int64 expire_time = 6 [default = 0];
   optional int64 last_save_time = 7 [default = 0];
}
message SquadCell {
   optional string unit_id = 1 [default = ""];
   optional string unit_def_id = 2 [default = ""];
   optional int32 cell_index = 3 [default = 0];
   optional UnitBattleStat unitBattleStat = 6;
   optional bool is_leader = 7 [default = false];
   optional bool is_ally = 8 [default = false];
   repeated CrewGroup crew_group = 9;
   optional string message_reticle = 10 [default = ""];
   optional bool progress_item = 11 [default = false];
}
enum SquadType {
   SQUAD_NEUTRAL = 1;
   SQUAD_LIGHT = 2;
   SQUAD_DARK = 3;
   SQUAD_EVENT = 4;
   SQUAD_PVP = 5;
   SQUAD_RESTRICTED = 6;
   SQUAD_SUPPLIED = 7;
   SQUAD_WAR = 8;
   SQUAD_EVENT_01 = 9;
   SQUAD_EVENT_02 = 10;
   SQUAD_EVENT_03 = 11;
   SQUAD_EVENT_04 = 12;
   SQUAD_EVENT_05 = 13;
   SQUAD_EVENT_06 = 14;
   SQUAD_EVENT_07 = 15;
   SQUAD_EVENT_08 = 16;
   SQUAD_EVENT_09 = 17;
   SQUAD_EVENT_10 = 18;
   SQUAD_EVENT_11 = 19;
   SQUAD_EVENT_12 = 20;
   SQUAD_EVENT_13 = 21;
   SQUAD_EVENT_14 = 22;
   SQUAD_EVENT_15 = 23;
   SQUAD_EVENT_16 = 24;
   SQUAD_EVENT_17 = 25;
   SQUAD_EVENT_18 = 26;
   SQUAD_EVENT_19 = 27;
   SQUAD_EVENT_20 = 28;
   SQUAD_WAR_DEFENSIVE = 29;
   SQUAD_GUILD_RAID = 30;
   SQUAD_STAT_MOD_BATTLES = 31;
   SQUAD_EVENT_DEFENSIVE = 32;
}
message Stat {
   optional string stat_id = 1 [default = ""];
   optional UnitStat unit_stat_id = 3 [default = UNIT_STAT_MAX_HEALTH];
   optional int32 stat_value_decimal_old = 4 [default = 0];
   optional int64 stat_value_decimal = 5 [default = 0];
}
message StatDef {
   repeated Stat stat = 19;
}
message StatMod {
   optional string id = 1 [default = ""];
   optional string definition_id = 2 [default = ""];
   optional int32 level = 4 [default = 0];
   optional StatModTier tier = 5 [default = STATMOD_TIER_01];
   optional CurrencyItem sell_value = 9;
   optional CurrencyItem remove_cost = 10;
   optional bool locked = 11 [default = false];
   optional StatModStat primary_stat = 12;
   repeated StatModStat secondary_stat = 13;
   optional int32 xp = 14 [default = 0];
   optional CurrencyItem level_cost = 15;
}
message StatModStat {
   optional string updater_id = 1 [default = ""];
   optional Stat stat = 2;
   repeated string roll = 3;
}
enum StatModTier {
   STATMOD_TIER_01 = 1;
   STATMOD_TIER_02 = 2;
   STATMOD_TIER_03 = 3;
   STATMOD_TIER_04 = 4;
   STATMOD_TIER_05 = 5;
}
message Unit {
   optional string id = 1 [default = ""];
   optional string definition_id = 2 [default = ""];
   optional Rarity current_rarity = 8 [default = NO_STAR];
   optional int32 current_level = 9 [default = 0];
   optional int32 current_xp = 10 [default = 0];
   optional string promotion_recipe_reference = 12 [default = ""];
   repeated Skill skill = 16;
   optional StatDef unit_stat = 17;
   repeated EquipmentSlot equipment = 18;
   optional UnitTier current_tier = 19 [default = TIER_01];
   repeated string equipped_stat_mod_old = 20;
   repeated StatMod equipped_stat_mod = 21;
}
message UnitBattleStat {
   optional int32 action_count_min = 4 [default = 0];
   optional int32 action_count_max = 5 [default = 0];
   optional StatDef battle_stat = 7;
   optional int32 level = 8 [default = 0];
   optional UnitTier tier = 9 [default = TIER_01];
   repeated EquipmentSlot equipment = 10;
   repeated Skill skill = 11;
   repeated StatMod stat_mod = 12;
}
enum UnitStat {
   UNIT_STAT_MAX_HEALTH = 1;
   UNIT_STAT_STRENGTH = 2;
   UNIT_STAT_AGILITY = 3;
   UNIT_STAT_INTELLIGENCE = 4;
   UNIT_STAT_SPEED = 5;
   UNIT_STAT_ATTACK_DAMAGE = 6;
   UNIT_STAT_ABILITY_POWER = 7;
   UNIT_STAT_ARMOR = 8;
   UNIT_STAT_SUPPRESSION = 9;
   UNIT_STAT_ARMOR_PENETRATION = 10;
   UNIT_STAT_SUPPRESSION_PENETRATION = 11;
   UNIT_STAT_DODGE_RATING = 12;
   UNIT_STAT_DEFLECTION_RATING = 13;
   UNIT_STAT_ATTACK_CRITICAL_RATING = 14;
   UNIT_STAT_ABILITY_CRITICAL_RATING = 15;
   UNIT_STAT_CRITICAL_DAMAGE = 16;
   UNIT_STAT_ACCURACY = 17;
   UNIT_STAT_RESISTANCE = 18;
   UNIT_STAT_DODGE_PERCENT_ADDITIVE = 19;
   UNIT_STAT_DEFLECTION_PERCENT_ADDITIVE = 20;
   UNIT_STAT_ATTACK_CRITICAL_PERCENT_ADDITIVE = 21;
   UNIT_STAT_ABILITY_CRITICAL_PERCENT_ADDITIVE = 22;
   UNIT_STAT_ARMOR_PERCENT_ADDITIVE = 23;
   UNIT_STAT_SUPPRESSION_PERCENT_ADDITIVE = 24;
   UNIT_STAT_ARMOR_PENETRATION_PERCENT_ADDITIVE = 25;
   UNIT_STAT_SUPPRESSION_PENETRATION_PERCENT_ADDITIVE = 26;
   UNIT_STAT_HEALTH_STEAL = 27;
   UNIT_STAT_MAX_SHIELD = 28;
   UNIT_STAT_SHIELD_PENETRATION = 29;
   UNIT_STAT_HEALTH_REGEN = 30;
   UNIT_STAT_ATTACK_DAMAGE_PERCENT_ADDITIVE = 31;
   UNIT_STAT_ABILITY_POWER_PERCENT_ADDITIVE = 32;
   UNIT_STAT_DODGE_NEGATE_PERCENT_ADDITIVE = 33;
   UNIT_STAT_DEFLECTION_NEGATE_PERCENT_ADDITIVE = 34;
   UNIT_STAT_ATTACK_CRITICAL_NEGATE_PERCENT_ADDITIVE = 35;
   UNIT_STAT_ABILITY_CRITICAL_NEGATE_PERCENT_ADDITIVE = 36;
   UNIT_STAT_DODGE_NEGATE_RATING = 37;
   UNIT_STAT_DEFLECTION_NEGATE_RATING = 38;
   UNIT_STAT_ATTACK_CRITICAL_NEGATE_RATING = 39;
   UNIT_STAT_ABILITY_CRITICAL_NEGATE_RATING = 40;
   UNIT_STAT_OFFENSE = 41;
   UNIT_STAT_DEFENSE = 42;
   UNIT_STAT_DEFENSE_PENETRATION = 43;
   UNIT_STAT_EVASION_RATING = 44;
   UNIT_STAT_CRITICAL_RATING = 45;
   UNIT_STAT_EVASION_NEGATE_RATING = 46;
   UNIT_STAT_CRITICAL_NEGATE_RATING = 47;
   UNIT_STAT_OFFENSE_PERCENT_ADDITIVE = 48;
   UNIT_STAT_DEFENSE_PERCENT_ADDITIVE = 49;
   UNIT_STAT_DEFENSE_PENETRATION_PERCENT_ADDITIVE = 50;
   UNIT_STAT_EVASION_PERCENT_ADDITIVE = 51;
   UNIT_STAT_EVASION_NEGATE_PERCENT_ADDITIVE = 52;
   UNIT_STAT_CRITICAL_CHANCE_PERCENT_ADDITIVE = 53;
   UNIT_STAT_CRITICAL_NEGATE_CHANCE_PERCENT_ADDITIVE = 54;
   UNIT_STAT_MAX_HEALTH_PERCENT_ADDITIVE = 55;
   UNIT_STAT_MAX_SHIELD_PERCENT_ADDITIVE = 56;
   UNIT_STAT_SPEED_PERCENT_ADDITIVE = 57;
   UNIT_STAT_COUNTER_ATTACK_RATING = 58;
   UNIT_STAT_TAUNT = 59;
}
enum UnitTier {
   TIER_01 = 1;
   TIER_02 = 2;
   TIER_03 = 3;
   TIER_04 = 4;
   TIER_05 = 5;
   TIER_06 = 6;
   TIER_07 = 7;
   TIER_08 = 8;
   TIER_09 = 9;
   TIER_10 = 10;
   TIER_11 = 11;
   TIER_12 = 12;
   TIER_13 = 13;
   TIER_14 = 14;
   TIER_15 = 15;
   TIER_16 = 16;
   TIER_17 = 17;
   TIER_18 = 18;
   TIER_19 = 19;
   TIER_20 = 20;
}
