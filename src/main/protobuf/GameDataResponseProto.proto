package Protos;

message Ability {
   optional string id = 1 [default = ""];
   optional string name_key = 2 [default = ""];
   optional string desc_key = 3 [default = ""];
   optional string prefab_name = 5 [default = ""];
   repeated BattleCondition trigger_condition = 6;
   optional string stacking_line_override = 8 [default = ""];
   repeated AbilityTier tier = 9;
   optional int32 cooldown = 11 [default = 0];
   optional string icon = 13 [default = ""];
   optional string apply_type_tooltip_key = 14 [default = ""];
   repeated EffectTag descriptive_tag = 15;
   repeated EffectReference effect_reference = 17;
   optional MessageDialog confirmation_message = 18;
   optional AbilityButtonLocationType button_location = 19 [default = ABILITY_STANDARD];
   optional string short_desc_key = 20 [default = ""];
}
enum AbilityButtonLocationType {
   ABILITY_STANDARD = 1;
   ABILITY_ADDITIONAL = 2;
   ABILITY_HIDDEN = 3;
}
message AbilityReference {
   optional string ability_id = 1 [default = ""];
   optional UnitTier required_tier = 2 [default = TIER_01];
   optional Rarity required_rarity = 3 [default = ONE_STAR];
}
message AbilityTier {
   optional string desc_key = 1 [default = ""];
   optional string upgrade_desc_key = 2 [default = ""];
   optional int32 cooldown_override = 5 [default = 0];
   repeated EffectReference effect_reference = 6;
}
message ActionLink {
   optional string link = 1 [default = ""];
   optional ActionLinkType type = 2 [default = INTERNAL];
}
enum ActionLinkType {
   INTERNAL = 1;
   EXTERNAL = 2;
}
message BattleCondition {
   optional ConditionType condition_type = 1 [default = ROUND_COUNT];
   optional string condition_value = 2 [default = ""];
}
message BattleEnvironment {
   optional string prefab = 1 [default = ""];
   repeated string audio_package = 3;
}
enum BattleUnitStateStat {
   BATTLE_UNIT_STAT_UNDEFINED = 1;
   BATTLE_UNIT_STAT_HEALTH = 2;
   BATTLE_UNIT_STAT_HEALTH_PERCENT = 3;
   BATTLE_UNIT_STAT_SPEED_FILL = 4;
   BATTLE_UNIT_STAT_SPEED_FILL_PERCENT = 5;
}
message BucketItem {
   optional string id = 1 [default = ""];
   optional ItemType type = 2 [default = EMPTY];
   optional int32 weight = 3 [default = 0];
   optional int32 minQuantity = 4 [default = 0];
   optional int32 maxQuantity = 5 [default = 0];
   optional Rarity rarity = 6 [default = ONE_STAR];
   optional StatMod stat_mod = 7;
}
message CampaignElementIdentifier {
   optional string campaign_id = 1 [default = ""];
   optional string campaign_map_id = 2 [default = ""];
   optional string campaign_node_id = 3 [default = ""];
   optional CampaignNodeDifficulty campaign_node_difficulty = 4 [default = NOT_SET];
   optional string campaign_mission_id = 5 [default = ""];
}
enum CampaignNodeDifficulty {
   NOT_SET = 0;
   NORMAL_DIFF = 4;
   HARD_DIFF = 5;
   NIGHTMARE_DIFF = 6;
   SPECIAL_DIFF = 7;
   I_DIFF = 8;
   II_DIFF = 9;
   III_DIFF = 10;
   IV_DIFF = 11;
   V_DIFF = 12;
   VI_DIFF = 13;
}
message Category {
   optional string id = 1 [default = ""];
   optional string desc_key = 2 [default = ""];
   optional bool visible = 3 [default = false];
   repeated CombatType ui_filter = 4;
}
message Challenge {
   optional string id = 1 [default = ""];
   optional ChallengeType type = 2 [default = LIFETIME_CHALLENGE];
   optional string name_key = 3 [default = ""];
   optional string desc_key = 4 [default = ""];
   optional string action_link = 5 [default = ""];
   optional Requirement view_requirement = 6;
   repeated BucketItem reward = 7;
   optional string platform_achievement_id = 9 [default = ""];
   optional ActionLink action_link_def = 10;
   optional ChallengeClaimType claim_type = 11 [default = CHALLENGE_CLAIM_MANUAL];
   optional ChallengeRewardType reward_type = 12 [default = CHALLENGE_REWARD_FIXED];
   optional float reward_ratio = 13 [default = 0];
}
enum ChallengeClaimType {
   CHALLENGE_CLAIM_MANUAL = 1;
   CHALLENGE_CLAIM_AUTOMATIC = 2;
}
enum ChallengeRewardType {
   CHALLENGE_REWARD_FIXED = 1;
   CHALLENGE_REWARD_RATIO = 2;
}
enum ChallengeType {
   DAILY_CHALLENGE = 1;
   LIFETIME_CHALLENGE = 2;
}
enum CombatType {
   CHARACTER = 1;
   SHIP = 2;
}
enum ConditionType {
   ROUND_COUNT = 1;
   END_OF_ROUND = 2;
   START_OF_ROUND = 3;
   START_OF_BATTLE = 4;
   CHANCE = 5;
   START_OF_ENCOUNTER = 7;
   CRIT = 8;
   RECEIVE_CRIT = 9;
   PERFORM_MOVE = 10;
   ATTACK = 11;
   LIMIT_BREAK = 12;
   RECEIVE_DAMAGE = 13;
   RECEIVE_HEAL = 14;
   COMBO = 15;
   RECEIVE_COMBO = 16;
   KILL = 17;
   REVIVE = 18;
   ENEMY_KILLED = 19;
   ALLY_KILLED = 20;
   DEATH = 21;
   ALLY_REVIVED = 22;
   ENEMY_REVIVED = 23;
   END_OF_ENCOUNTER = 24;
   START_OF_TURN = 25;
   HEALTH_DECREASE = 26;
   HEALTH_INCREASE = 27;
   PERSISTENT_EFFECT_ADD = 28;
   PERSISTENT_EFFECT_REMOVE = 29;
   DODGED = 30;
   WAS_DODGED = 31;
   END_OF_TURN = 32;
   RESISTED = 33;
   WAS_RESISTED = 34;
   START_MOVE = 35;
   START_ATTACK = 36;
   START_LIMIT_BREAK = 37;
   PRE_EFFECT_EVAL = 38;
   RECEIVE_PRE_EFFECT_EVAL = 39;
   POST_EFFECT_EVAL = 40;
   RECEIVE_POST_EFFECT_EVAL = 41;
   PRE_EVASION_EVAL = 42;
   RECEIVE_PRE_EVASION_EVAL = 43;
   POST_EVASION_EVAL = 44;
   RECEIVE_POST_EVASION_EVAL = 45;
   START_OF_GUILD_RAID_FOR_PLAYER = 46;
   START_OF_GUILD_RAID_ENCOUNTER_FOR_PLAYER = 47;
   PRE_RECEIVE_DAMAGE = 48;
   FULL_TURN_COMPLETE = 49;
   PERSISTENT_EFFECT_ADD_INSTANCE = 50;
   PERSISTENT_EFFECT_REMOVE_INSTANCE = 51;
   FLED = 52;
   ALLY_FLED = 53;
   ENEMY_FLED = 54;
}
message CraftingMaterialDef {
   optional string id = 1 [default = ""];
   optional string name_key = 2 [default = ""];
   optional string desc_key = 3 [default = ""];
   optional string icon_key = 4 [default = ""];
   optional CurrencyItem sell_value = 5;
   repeated LookupMission lookup_mission = 6;
   optional int32 xp_value = 7 [default = 0];
   optional MaterialType type = 8 [default = CRAFTING_MATERIAL];
   optional UnitClass unit_class = 9 [default = WARRIOR];
   optional Rarity rarity = 10 [default = NO_STAR];
   optional int32 training_cost = 11 [default = 0];
   optional int32 training_cost_max_level = 12 [default = 0];
   optional string unit_def_reference = 13 [default = ""];
   optional UnitTier tier = 14 [default = TIER_01];
   optional int64 obtainable_time = 15 [default = 0];
   repeated LookupMission raid_lookup = 16;
   repeated LookupActionLink action_link_lookup = 17;
}
message CrewGroupSlotDef {
   optional int32 max_size = 1 [default = 0];
   optional Rarity rarity_requirement = 2 [default = NO_STAR];
   optional string name_key = 3 [default = ""];
   optional string stat_table_id = 4 [default = ""];
}
message CrewMember {
   optional string unit_id = 1 [default = ""];
   optional int32 slot = 2 [default = 0];
   repeated SkillDefinitionReference skill_reference = 3;
}
message CurrencyItem {
   optional CurrencyType currency = 1 [default = GRIND];
   optional int32 quantity = 2 [default = 0];
}
enum CurrencyType {
   GRIND = 1;
   PREMIUM = 2;
   REAL_MONEY = 3;
   SOCIAL = 4;
   IGC_EVENT_KEYCARD = 8;
   XP_EVENT_KEYCARD = 9;
   PVP_CURRENCY = 10;
   FORCE_POINT = 11;
   PVP_SHIP_CURRENCY = 12;
   FREE = 13;
   WAR_SHIP_CURRENCY = 14;
   GRIND_TICKET = 15;
   SHARD_CURRENCY = 16;
   GUILD_CURRENCY = 17;
   GUILD_BANK_CURRENCY = 18;
   SHIP_GRIND = 19;
   GUILD_RAID_CURRENCY_01 = 20;
   GUILD_RAID_CURRENCY_02 = 21;
   GUILD_RAID_CURRENCY_03 = 22;
   GUILD_RAID_CURRENCY_04 = 23;
   GUILD_RAID_CURRENCY_05 = 24;
   GUILD_RAID_CURRENCY_06 = 25;
   GUILD_RAID_CURRENCY_07 = 26;
   GUILD_RAID_CURRENCY_08 = 27;
   GUILD_RAID_CURRENCY_09 = 28;
   GUILD_RAID_CURRENCY_10 = 29;
   GUILD_RAID_CURRENCY_11 = 30;
   GUILD_RAID_CURRENCY_12 = 31;
}
message DecimalTable {
   optional string id = 1 [default = ""];
   repeated DecimalTableRow row = 2;
}
message DecimalTableRow {
   optional int32 index = 1 [default = 0];
   optional int64 value_decimal = 2 [default = 0];
}
message Effect {
   optional string id = 1 [default = ""];
   optional EffectType type = 2 [default = DAMAGE];
   repeated string param = 6;
   optional int32 chance = 7 [default = 0];
   repeated EffectTarget target = 8;
   repeated EffectTag descriptive_tag = 9;
   repeated EffectTag effected_tag = 10;
   repeated BattleCondition trigger_condition = 12;
   repeated Effect effect_definition = 13;
   repeated int32 context_index = 14;
   repeated BattleCondition expiration_condition = 15;
   optional EffectApplyType apply_type = 16 [default = UNAVOIDABLE];
   optional EffectDamageType damage_type = 17 [default = UNMITIGABLE];
   optional string persistent_icon = 19 [default = ""];
   optional string triggered_vfx = 20 [default = ""];
   optional string triggered_loc_key = 21 [default = ""];
   optional int32 max_bonus_moves = 23 [default = 0];
   repeated EffectReference effect_reference = 24;
   optional int32 multiplier_amount_decimal = 25 [default = 0];
   optional int32 context_multiplier_decimal = 26 [default = 0];
   optional int32 additive_amount_decimal = 27 [default = 0];
   optional int32 result_variance_decimal = 28 [default = 0];
   optional string persistent_loc_key = 29 [default = ""];
   optional string stacking_line_override = 30 [default = ""];
}
enum EffectApplyType {
   UNAVOIDABLE = 1;
   PHYSICAL = 2;
   MENTAL = 3;
}
enum EffectDamageType {
   UNMITIGABLE = 1;
   ATTACK_DAMAGE = 2;
   ABILITY_POWER = 3;
}
message EffectReference {
   optional string id = 1 [default = ""];
   repeated int32 context_index = 2;
   optional int32 max_bonus_move = 3 [default = 0];
}
message EffectTag {
   optional string tag = 1 [default = ""];
}
message EffectTagCriteria {
   optional string tag = 1 [default = ""];
   optional bool exclude = 2 [default = false];
}
message EffectTarget {
   optional EffectTargetUnitSelect unit_select = 1 [default = SELECT_ALL];
   optional EffectTargetBattleSide battle_side = 2 [default = BOTH_SIDES];
   repeated UnitClass unit_class = 3;
   repeated ForceAlignment force_alignment = 4;
   optional EffectTargetCategoryCriteria category = 5;
   optional UnitHealthState health_state = 6 [default = UNIT_HEALTH_STATE_ANY];
   repeated StatValueRange stat_value = 8;
   repeated EffectTagCriteria active_effect_tag_criteria = 9;
}
enum EffectTargetBattleSide {
   BOTH_SIDES = 1;
   ALLY_SIDE = 2;
   ENEMY_SIDE = 3;
   PLAYER_SIDE = 4;
   OPPONENT_SIDE = 5;
}
message EffectTargetCategoryCriteria {
   optional bool exclude = 1 [default = false];
   repeated string category_id = 2;
}
enum EffectTargetUnitSelect {
   SELECT_ALL = 1;
   SELECTED_TARGET = 2;
   SELECT_RANDOM = 3;
   SELECT_SELF = 4;
   SELECT_PREVIOUS = 5;
}
enum EffectType {
   DAMAGE = 1;
   RECOVER = 2;
   PARALYSIS = 3;
   CURSE = 4;
   DISPELL = 5;
   IMMUNITY = 6;
   BONUS_MOVE = 7;
   MODIFY_STAT = 8;
   APPLY_EFFECT = 9;
   DISTRIBUTE_RECOVERY = 10;
   QUERY_COUNT = 11;
   QUERY_STAT = 12;
   REVIVE_UNIT = 13;
   SCRIPT_COMPONENT = 14;
   FLEE = 15;
   DESTROY = 16;
}
message EquipmentDef {
   optional string id = 1 [default = ""];
   optional string name_key = 2 [default = ""];
   optional string icon_key = 3 [default = ""];
   optional int32 required_level = 4 [default = 0];
   optional StatDef equipment_stat = 5;
   optional string recipe_id = 6 [default = ""];
   optional UnitTier tier = 7 [default = TIER_01];
   optional CurrencyItem sell_value = 8;
   repeated LookupMission lookup_mission = 9;
   optional string mark = 10 [default = ""];
   optional int64 obtainable_time = 11 [default = 0];
   repeated LookupMission raid_lookup = 12;
   optional EquipmentType type = 13 [default = EQUIPMENT_EQUIPPABLE];
   repeated LookupActionLink action_link_lookup = 14;
}
enum EquipmentType {
   EQUIPMENT_EQUIPPABLE = 1;
   EQUIPMENT_UNRELEASED = 2;
   EQUIPMENT_MATERIAL = 3;
}
enum EvaluationType {
   AND = 1;
   OR = 2;
}
message EventSampling {
   optional string event_id = 1 [default = ""];
   optional int32 spender_value = 2 [default = 0];
   optional int32 non_spender_value = 3 [default = 0];
}
enum ForceAlignment {
   NEUTRAL = 1;
   LIGHT = 2;
   DARK = 3;
}
message GameDataResponse {
   repeated UnitDef units = 1;
   repeated BattleEnvironment battle_environments = 2;
   repeated XpTable xp_table = 3;
   repeated CraftingMaterialDef material = 7;
   repeated Recipe recipe = 8;
   repeated StatProgression stat_progression = 9;
   repeated Category category = 10;
   repeated HelpEntry help_entry = 11;
   repeated SystemModifier system_modifier = 12;
   repeated Challenge challenge = 13;
   repeated SkillDefinition skill = 14;
   repeated EventSampling event_sampling = 16;
   repeated EquipmentDef equipment = 17;
   repeated WarDef war_definition = 18;
   repeated TargetingSet targeting_set = 19;
   repeated Ability ability = 20;
   repeated Effect effect = 21;
   repeated Requirement requirement = 22;
   repeated PowerUpBundle power_up_bundle = 23;
   optional GuildBannerDef guild_banner = 24;
   repeated GuildRaidConfig raid_config = 26;
   repeated GuildRaid guild_raid = 27;
   repeated StatModSetDefinition stat_mod_set = 28;
   repeated StatModDefinition stat_mod = 29;
   repeated StatModUpdaterDefinition stat_mod_updater = 30;
   repeated DecimalTable decimal_table = 31;
   repeated GuildExchangeItem guild_exchange_item = 32;
   repeated Table table = 33;
}
message GuildBannerColorDef {
   optional string id = 1 [default = ""];
   optional string tint_color = 2 [default = ""];
   optional string background_color = 3 [default = ""];
}
message GuildBannerDef {
   repeated string logo = 1;
   repeated GuildBannerColorDef color = 2;
   repeated GuildBannerLogoDef logoDefinition = 3;
}
message GuildBannerLogoDef {
   optional string id = 1 [default = ""];
   optional string logo = 2 [default = ""];
   optional string ui_logo = 3 [default = ""];
}
message GuildExchangeItem {
   optional BucketItem item = 1;
}
message GuildRaid {
   optional string id = 1 [default = ""];
   optional int32 priority = 2 [default = 0];
   optional string name_key = 3 [default = ""];
   optional string summary_key = 4 [default = ""];
   optional string desc_key = 5 [default = ""];
   optional string image = 6 [default = ""];
   optional SquadType squad_type = 8 [default = SQUAD_GUILD_RAID];
   optional CampaignElementIdentifier campaign_element_identifier = 9;
   optional string icon_prefab = 11 [default = ""];
   optional string promotion_key = 12 [default = ""];
   optional string portrait_icon = 13 [default = ""];
}
message GuildRaidConfig {
   optional string id = 1 [default = ""];
   optional GuildRaidType raid_type = 2 [default = RAID_TYPE_PERMANENT];
   optional GuildRaidRosterRefreshType roster_refresh_type = 3 [default = RAID_ROSTER_REFRESH_NONE];
   optional GuildRaidRosterRefresh roster_refresh = 4;
   optional int64 raid_duration = 5 [default = 0];
}
message GuildRaidRosterRefresh {
   optional string type = 1 [default = ""];
   repeated int32 value = 2;
}
enum GuildRaidRosterRefreshType {
   RAID_ROSTER_REFRESH_NONE = 1;
   RAID_ROSTER_REFRESH_SCHEDULED = 2;
   RAID_ROSTER_REFRESH_PURCHASABLE = 3;
   RAID_ROSTER_REFRESH_TIMED = 4;
}
enum GuildRaidType {
   RAID_TYPE_PERMANENT = 1;
   RAID_TYPE_TIME_LIMITED = 2;
}
message HelpEntry {
   optional HelpType id = 1 [default = BATTLE];
   repeated HelpTile tile = 2;
}
message HelpTile {
   optional string text_key = 1 [default = ""];
   optional string image = 2 [default = ""];
   optional string title_key = 3 [default = ""];
}
enum HelpType {
   BATTLE = 1;
   SQUAD = 2;
   PROGRESS = 3;
}
enum ItemType {
   EMPTY = 1;
   UNIT = 2;
   CURRENCY = 3;
   BUCKET = 4;
   CONSUMABLE = 5;
   XP = 6;
   MATERIAL = 7;
   ENERGY = 8;
   UNIT_SHARD = 9;
   RECIPE = 10;
   EQUIPMENT = 11;
   EVENT_KEYCARD = 12;
   POWERUP_BUNDLE = 13;
   MYSTERY_BOX = 14;
   STAT_MOD = 15;
   MYSTERY_STAT_MOD = 16;
}
message LookupActionLink {
   optional string desk_key = 1 [default = ""];
   optional ActionLink action_link = 2;
}
message LookupMission {
   optional CampaignElementIdentifier mission_identifier = 1;
   optional bool event = 2 [default = false];
}
enum MaterialType {
   CRAFTING_MATERIAL = 1;
   XP_MATERIAL = 2;
   UNIT_SHARD_MATERIAL = 3;
   PROMOTION_MATERIAL = 4;
   SKILL_MATERIAL = 5;
   SELL_MATERIAL = 6;
   SHIP_XP_MATERIAL = 7;
}
message MessageDialog {
   optional string title_key = 1 [default = ""];
   optional string desc_key = 2 [default = ""];
}
enum OperationType {
   ADDITIVE = 1;
   MULTIPLICATIVE = 2;
}
message Position {
   optional string x = 1 [default = ""];
   optional string y = 2 [default = ""];
   optional string z = 3 [default = ""];
}
message PowerUpBundle {
   optional string id = 1 [default = ""];
   optional int32 target_level = 2 [default = 0];
   optional UnitTier target_gear_tier = 3 [default = TIER_01];
   optional bool auto_select_tier = 4 [default = false];
}
enum Rarity {
   ONE_STAR = 1;
   TWO_STAR = 2;
   THREE_STAR = 3;
   FOUR_STAR = 4;
   FIVE_STAR = 5;
   SIX_STAR = 6;
   SEVEN_STAR = 7;
   NO_STAR = 8;
}
message Recipe {
   optional string id = 1 [default = ""];
   optional string name_key = 2 [default = ""];
   optional string desc_key = 3 [default = ""];
   optional string icon_key = 4 [default = ""];
   optional BucketItem result = 5;
   repeated BucketItem ingredients = 6;
   optional RecipeType type = 7 [default = RECIPE_INVALID];
   optional Requirement view_requirement = 8;
   optional int32 unlock_level = 9 [default = 0];
   optional Requirement craft_requirement = 10;
}
enum RecipeType {
   RECIPE_INVALID = 1;
   RECIPE_PROMOTION = 2;
   RECIPE_SHIP = 3;
   RECIPE_CONSUMABLE = 4;
   RECIPE_CHARACTER = 5;
   RECIPE_SKILL = 6;
   RECIPE_EQUIPMENT = 7;
}
message Requirement {
   optional EvaluationType eval_type = 1 [default = AND];
   repeated RequirementItem requirement_item = 2;
   optional string id = 3 [default = ""];
   optional string desc_key = 4 [default = ""];
}
message RequirementItem {
   optional RequirementType type = 1 [default = REQUIREMENT_INVALID];
   optional string id = 2 [default = ""];
   optional int32 value = 3 [default = 0];
}
enum RequirementType {
   CURRENCY_REQUIREMENT = 3;
   ROSTER_CHARACTER_NOT_CATEGORY_NOT_IN_SQUAD_REQUIREMENT = 10;
   SQUAD_SIZE_MAXIMUM_REQUIREMENT = 11;
   ROSTER_CHARACTER_CATEGORY_NOT_IN_USE_REQUIREMENT = 12;
   ROSTER_CHARACTER_NOT_IN_USE_REQUIREMENT = 13;
   SQUAD_SIZE_MINIMUM_REQUIREMENT = 14;
   ENEMY_THREAT_LEVEL_REQUIREMENT = 15;
   ANY_CHARACTER_READY_FOR_PROMOTION = 16;
   UNIT_TRAINING_AVAILABLE = 19;
   PLAYER_LEVEL_MIN_REQUIREMENT = 20;
   ROSTER_UNIT_TYPE_REQUIREMENT = 22;
   ROSTER_UNIT_TYPE_MAX_REQUIREMENT = 23;
   UNIT_ABILITY_UPGRADE_AVAILABLE = 24;
   UNIT_GEAR_EQUIP_AVAILABLE = 25;
   CURRENT_UNIT_GEAR_EQUIP_AVAILABLE = 26;
   PLAYER_UNIT_HEALTH_BELOW_PERCENT = 27;
   REQUIREMENT_INVALID = 28;
   CURRENT_CHARACTER_READY_FOR_PROMOTION = 29;
   BATTLE_ANY_STATUS_EFFECT_ACTIVE = 30;
   STORE_ITEM_AVAILABLE_FOR_PURCHASE = 31;
   CURRENT_MISSION_HAS_GEAR_DROP = 32;
   PLAYER_LEVEL_MAX_REQUIREMENT = 33;
   CAMPAIGN_REQUIREMENT = 34;
   ANY_DAILY_ACTIVITY_READY_FOR_CLAIM = 35;
   FACEBOOK_LOGIN_AVAILABLE = 36;
   ANY_UNIT_REACHED_MAX_RARITY = 37;
   CURRENT_CHARACTER_READY_FOR_TIER_UP = 38;
   EVENT_ACTIVE = 39;
   BATTLE_ANY_UNIT_HAS_SHIELD = 40;
   CURRENT_CHARACTER_MIN_TIER = 41;
   UNIT_LEVEL_MAX_REQUIREMENT = 42;
   UNIT_LEVEL_MIN_REQUIREMENT = 43;
   ROSTER_UNIT_REQUIREMENT = 44;
   UNIT_SHARD_REQUIREMENT = 45;
   ROSTER_UNIT_COMBAT_TYPE_REQUIREMENT = 46;
   BATTLE_TURN_COUNT = 47;
   BATTLE_ENCOUNTER_STARTED = 48;
   BATTLE_UNIT_TURN_SQUAD_CELL_INDEX = 49;
   ROSTER_UNIT_CLASS_REQUIREMENT = 50;
}
message SkillDefinition {
   optional string id = 1 [default = ""];
   optional string name_key = 3 [default = ""];
   optional string icon_key = 4 [default = ""];
   repeated SkillTierDefinition tier = 5;
   optional string ability_reference = 6 [default = ""];
}
message SkillDefinitionReference {
   optional string skill_id = 1 [default = ""];
   optional UnitTier required_tier = 3 [default = TIER_01];
   optional Rarity required_rarity = 4 [default = NO_STAR];
}
message SkillTierDefinition {
   optional string recipe_id = 1 [default = ""];
   optional int32 required_unit_level = 2 [default = 0];
   optional Rarity required_unit_rarity = 3 [default = NO_STAR];
}
enum SquadType {
   SQUAD_NEUTRAL = 1;
   SQUAD_LIGHT = 2;
   SQUAD_DARK = 3;
   SQUAD_EVENT = 4;
   SQUAD_PVP = 5;
   SQUAD_RESTRICTED = 6;
   SQUAD_SUPPLIED = 7;
   SQUAD_WAR = 8;
   SQUAD_EVENT_01 = 9;
   SQUAD_EVENT_02 = 10;
   SQUAD_EVENT_03 = 11;
   SQUAD_EVENT_04 = 12;
   SQUAD_EVENT_05 = 13;
   SQUAD_EVENT_06 = 14;
   SQUAD_EVENT_07 = 15;
   SQUAD_EVENT_08 = 16;
   SQUAD_EVENT_09 = 17;
   SQUAD_EVENT_10 = 18;
   SQUAD_EVENT_11 = 19;
   SQUAD_EVENT_12 = 20;
   SQUAD_EVENT_13 = 21;
   SQUAD_EVENT_14 = 22;
   SQUAD_EVENT_15 = 23;
   SQUAD_EVENT_16 = 24;
   SQUAD_EVENT_17 = 25;
   SQUAD_EVENT_18 = 26;
   SQUAD_EVENT_19 = 27;
   SQUAD_EVENT_20 = 28;
   SQUAD_WAR_DEFENSIVE = 29;
   SQUAD_GUILD_RAID = 30;
   SQUAD_STAT_MOD_BATTLES = 31;
   SQUAD_EVENT_DEFENSIVE = 32;
}
message Stat {
   optional string stat_id = 1 [default = ""];
   optional UnitStat unit_stat_id = 3 [default = UNIT_STAT_MAX_HEALTH];
   optional int32 stat_value_decimal_old = 4 [default = 0];
   optional int64 stat_value_decimal = 5 [default = 0];
}
message StatDef {
   repeated Stat stat = 19;
}
message StatMod {
   optional string id = 1 [default = ""];
   optional string definition_id = 2 [default = ""];
   optional int32 level = 4 [default = 0];
   optional StatModTier tier = 5 [default = STATMOD_TIER_01];
   optional CurrencyItem sell_value = 9;
   optional CurrencyItem remove_cost = 10;
   optional bool locked = 11 [default = false];
   optional StatModStat primary_stat = 12;
   repeated StatModStat secondary_stat = 13;
   optional int32 xp = 14 [default = 0];
   optional CurrencyItem level_cost = 15;
}
message StatModDefinition {
   optional string id = 1 [default = ""];
   optional StatModSlot slot = 2 [default = STATMOD_SLOT_01];
   optional string set_id = 3 [default = ""];
   optional Rarity rarity = 4 [default = ONE_STAR];
   optional string name_key = 5 [default = ""];
   optional string desc_key = 6 [default = ""];
   repeated LookupMission mission_lookup = 7;
   repeated LookupMission raid_lookup = 8;
   repeated LookupActionLink action_link_lookup = 9;
   optional string level_table_id = 10 [default = ""];
}
message StatModSetBonus {
   repeated string ability_id = 1;
   optional Stat stat = 2;
}
message StatModSetDefinition {
   optional string id = 1 [default = ""];
   optional string name = 2 [default = ""];
   optional string icon = 4 [default = ""];
   optional StatModSetBonus complete_bonus = 6;
   optional StatModSetBonus max_level_bonus = 7;
   optional int32 set_count = 8 [default = 0];
}
enum StatModSlot {
   STATMOD_SLOT_01 = 2;
   STATMOD_SLOT_02 = 3;
   STATMOD_SLOT_03 = 4;
   STATMOD_SLOT_04 = 5;
   STATMOD_SLOT_05 = 6;
   STATMOD_SLOT_06 = 7;
}
message StatModStat {
   optional string updater_id = 1 [default = ""];
   optional Stat stat = 2;
   repeated string roll = 3;
}
enum StatModTier {
   STATMOD_TIER_01 = 1;
   STATMOD_TIER_02 = 2;
   STATMOD_TIER_03 = 3;
   STATMOD_TIER_04 = 4;
   STATMOD_TIER_05 = 5;
}
message StatModUpdaterDefinition {
   optional string id = 1 [default = ""];
   optional StatModUpdaterType type = 2 [default = UPDATE_TYPE_STAT_TABLE];
   optional string table_id = 3 [default = ""];
   optional int64 min_increment_value_decimal = 4 [default = 0];
   optional int64 max_increment_value_decimal = 5 [default = 0];
}
enum StatModUpdaterType {
   UPDATE_TYPE_STAT_TABLE = 1;
   UPDATE_TYPE_STAT_ROLL = 2;
}
message StatProgression {
   optional string id = 1 [default = ""];
   optional StatDef stat = 6;
   optional OperationType operation = 7 [default = ADDITIVE];
}
message StatValueRange {
   optional UnitStat stat = 1 [default = UNIT_STAT_MAX_HEALTH];
   optional BattleUnitStateStat battle_stat = 2 [default = BATTLE_UNIT_STAT_UNDEFINED];
   optional StatValueRangeNumber min = 3;
   optional StatValueRangeNumber max = 4;
}
message StatValueRangeNumber {
   optional int32 value = 1 [default = 0];
   optional bool inclusive = 2 [default = false];
}
enum SystemModified {
   SYSTEM_NONE = 1;
   UNIT_TRAINING = 2;
}
message SystemModifier {
   optional string id = 1 [default = ""];
   optional SystemModifierType type = 2 [default = TIME_LIMITED];
   optional SystemModified system = 3 [default = SYSTEM_NONE];
   optional string label_key = 4 [default = ""];
   optional TimeLimitedModifier time_modifier = 5;
}
enum SystemModifierType {
   TIME_LIMITED = 1;
}
message Table {
   optional string id = 1 [default = ""];
   repeated TableRow row = 2;
}
message TableRow {
   optional string key = 1 [default = ""];
   optional string value = 2 [default = ""];
}
message TargetingSet {
   optional string id = 1 [default = ""];
   repeated TargetingWeight weight = 2;
}
message TargetingWeight {
   optional string type = 1 [default = ""];
   optional string param = 2 [default = ""];
   optional int32 value_decimal = 4 [default = 0];
}
enum ThreatLevel {
   NORMAL = 1;
   ELITE = 2;
   BOSS = 3;
   ANY = 4;
}
message TimeLimitedModifier {
   optional int64 start_time = 1 [default = 0];
   optional int64 end_time = 2 [default = 0];
}
enum UnitClass {
   WARRIOR = 1;
   TACTICIAN = 2;
   SCOUNDREL = 3;
   LIGHT_FORCE = 4;
   DARK_FORCE = 5;
   UNITCLASS_STANDARD = 6;
   UNITCLASS_COMMANDER = 7;
}
message UnitDef {
   optional string id = 1 [default = ""];
   optional string unit_prefab = 2 [default = ""];
   optional string thumbnail_name = 3 [default = ""];
   optional string name_key = 4 [default = ""];
   optional Rarity rarity = 11 [default = NO_STAR];
   optional Rarity max_rarity = 12 [default = NO_STAR];
   optional ForceAlignment force_alignment = 13 [default = NEUTRAL];
   optional string xp_table_id = 14 [default = ""];
   optional int32 action_count_min = 17 [default = 0];
   optional int32 action_count_max = 18 [default = 0];
   optional CombatType combat_type = 19 [default = CHARACTER];
   optional string desc_key = 21 [default = ""];
   optional ThreatLevel threat_level = 24 [default = NORMAL];
   optional bool obtainable = 25 [default = false];
   optional string base_id = 26 [default = ""];
   optional string promotion_recipe_reference = 27 [default = ""];
   repeated CrewGroupSlotDef crew_group_slot = 28;
   optional string stat_progression_id = 33 [default = ""];
   repeated string category_id = 34;
   optional int32 training_xp_worth_base_value_override = 36 [default = 0];
   optional int32 max_level_override = 38 [default = 0];
   optional int32 training_cost_multiplier_override = 39 [default = 0];
   optional string creation_recipe_reference = 41 [default = ""];
   repeated SkillDefinitionReference skill_reference = 42;
   optional int32 base_power = 43 [default = 0];
   optional StatDef base_stat = 50;
   optional string primary_stat = 51 [default = ""];
   repeated UnitTierDef unit_tier = 52;
   optional Ability basic_attack = 53;
   optional Ability leader_ability = 54;
   repeated Ability limit_break = 55;
   repeated Ability unique_ability = 56;
   repeated Ability crew_ability = 57;
   repeated Ability crew_unique_ability = 58;
   optional AbilityReference basic_attack_ref = 59;
   optional AbilityReference leader_ability_ref = 60;
   repeated AbilityReference limit_break_ref = 61;
   repeated AbilityReference unique_ability_ref = 62;
   repeated AbilityReference crew_ability_ref = 63;
   repeated AbilityReference crew_unique_ability_ref = 64;
   optional UnitStat primary_unit_stat = 65 [default = UNIT_STAT_MAX_HEALTH];
   optional int64 obtainable_time = 66 [default = 0];
   repeated CrewMember crew = 67;
   optional int32 command_cost = 68 [default = 0];
   optional string crew_contribution_table_id = 69 [default = ""];
   optional UnitClass unitClass = 70 [default = WARRIOR];
}
enum UnitHealthState {
   UNIT_HEALTH_STATE_ANY = 1;
   UNIT_HEALTH_STATE_ALIVE = 2;
   UNIT_HEALTH_STATE_DEAD = 3;
}
enum UnitStat {
   UNIT_STAT_MAX_HEALTH = 1;
   UNIT_STAT_STRENGTH = 2;
   UNIT_STAT_AGILITY = 3;
   UNIT_STAT_INTELLIGENCE = 4;
   UNIT_STAT_SPEED = 5;
   UNIT_STAT_ATTACK_DAMAGE = 6;
   UNIT_STAT_ABILITY_POWER = 7;
   UNIT_STAT_ARMOR = 8;
   UNIT_STAT_SUPPRESSION = 9;
   UNIT_STAT_ARMOR_PENETRATION = 10;
   UNIT_STAT_SUPPRESSION_PENETRATION = 11;
   UNIT_STAT_DODGE_RATING = 12;
   UNIT_STAT_DEFLECTION_RATING = 13;
   UNIT_STAT_ATTACK_CRITICAL_RATING = 14;
   UNIT_STAT_ABILITY_CRITICAL_RATING = 15;
   UNIT_STAT_CRITICAL_DAMAGE = 16;
   UNIT_STAT_ACCURACY = 17;
   UNIT_STAT_RESISTANCE = 18;
   UNIT_STAT_DODGE_PERCENT_ADDITIVE = 19;
   UNIT_STAT_DEFLECTION_PERCENT_ADDITIVE = 20;
   UNIT_STAT_ATTACK_CRITICAL_PERCENT_ADDITIVE = 21;
   UNIT_STAT_ABILITY_CRITICAL_PERCENT_ADDITIVE = 22;
   UNIT_STAT_ARMOR_PERCENT_ADDITIVE = 23;
   UNIT_STAT_SUPPRESSION_PERCENT_ADDITIVE = 24;
   UNIT_STAT_ARMOR_PENETRATION_PERCENT_ADDITIVE = 25;
   UNIT_STAT_SUPPRESSION_PENETRATION_PERCENT_ADDITIVE = 26;
   UNIT_STAT_HEALTH_STEAL = 27;
   UNIT_STAT_MAX_SHIELD = 28;
   UNIT_STAT_SHIELD_PENETRATION = 29;
   UNIT_STAT_HEALTH_REGEN = 30;
   UNIT_STAT_ATTACK_DAMAGE_PERCENT_ADDITIVE = 31;
   UNIT_STAT_ABILITY_POWER_PERCENT_ADDITIVE = 32;
   UNIT_STAT_DODGE_NEGATE_PERCENT_ADDITIVE = 33;
   UNIT_STAT_DEFLECTION_NEGATE_PERCENT_ADDITIVE = 34;
   UNIT_STAT_ATTACK_CRITICAL_NEGATE_PERCENT_ADDITIVE = 35;
   UNIT_STAT_ABILITY_CRITICAL_NEGATE_PERCENT_ADDITIVE = 36;
   UNIT_STAT_DODGE_NEGATE_RATING = 37;
   UNIT_STAT_DEFLECTION_NEGATE_RATING = 38;
   UNIT_STAT_ATTACK_CRITICAL_NEGATE_RATING = 39;
   UNIT_STAT_ABILITY_CRITICAL_NEGATE_RATING = 40;
   UNIT_STAT_OFFENSE = 41;
   UNIT_STAT_DEFENSE = 42;
   UNIT_STAT_DEFENSE_PENETRATION = 43;
   UNIT_STAT_EVASION_RATING = 44;
   UNIT_STAT_CRITICAL_RATING = 45;
   UNIT_STAT_EVASION_NEGATE_RATING = 46;
   UNIT_STAT_CRITICAL_NEGATE_RATING = 47;
   UNIT_STAT_OFFENSE_PERCENT_ADDITIVE = 48;
   UNIT_STAT_DEFENSE_PERCENT_ADDITIVE = 49;
   UNIT_STAT_DEFENSE_PENETRATION_PERCENT_ADDITIVE = 50;
   UNIT_STAT_EVASION_PERCENT_ADDITIVE = 51;
   UNIT_STAT_EVASION_NEGATE_PERCENT_ADDITIVE = 52;
   UNIT_STAT_CRITICAL_CHANCE_PERCENT_ADDITIVE = 53;
   UNIT_STAT_CRITICAL_NEGATE_CHANCE_PERCENT_ADDITIVE = 54;
   UNIT_STAT_MAX_HEALTH_PERCENT_ADDITIVE = 55;
   UNIT_STAT_MAX_SHIELD_PERCENT_ADDITIVE = 56;
   UNIT_STAT_SPEED_PERCENT_ADDITIVE = 57;
   UNIT_STAT_COUNTER_ATTACK_RATING = 58;
   UNIT_STAT_TAUNT = 59;
}
enum UnitTier {
   TIER_01 = 1;
   TIER_02 = 2;
   TIER_03 = 3;
   TIER_04 = 4;
   TIER_05 = 5;
   TIER_06 = 6;
   TIER_07 = 7;
   TIER_08 = 8;
   TIER_09 = 9;
   TIER_10 = 10;
   TIER_11 = 11;
   TIER_12 = 12;
   TIER_13 = 13;
   TIER_14 = 14;
   TIER_15 = 15;
   TIER_16 = 16;
   TIER_17 = 17;
   TIER_18 = 18;
   TIER_19 = 19;
   TIER_20 = 20;
}
message UnitTierDef {
   optional UnitTier tier = 1 [default = TIER_01];
   repeated string equipment_set = 2;
   optional StatDef base_stat = 3;
}
message WarDef {
   optional string id = 1 [default = ""];
   optional CombatType type = 2 [default = SHIP];
   optional CampaignNodeDifficulty difficulty = 3 [default = NORMAL_DIFF];
   optional string daily_reset_cap_key = 4 [default = ""];
   repeated WarNodeDef node = 5;
}
message WarNodeDef {
   optional string id = 1 [default = ""];
   optional WarNodeType type = 2 [default = NODETYPE_OPPONENT];
   optional CombatType combat_type = 3 [default = SHIP];
   optional Position position = 4;
}
enum WarNodeType {
   NODETYPE_OPPONENT = 1;
   NODETYPE_CHEST_COMMON = 2;
   NODETYPE_CHEST_RARE = 3;
   NODETYPE_CHEST_EPIC = 4;
}
message XpTable {
   optional string id = 1 [default = ""];
   repeated XpTableRow row = 2;
}
message XpTableRow {
   optional int32 index = 1 [default = 0];
   optional int32 xp = 2 [default = 0];
}
