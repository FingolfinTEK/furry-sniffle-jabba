package Protos;

message BucketItem {
   optional string id = 1 [default = ""];
   optional ItemType type = 2 [default = EMPTY];
   optional int32 weight = 3 [default = 0];
   optional int32 minQuantity = 4 [default = 0];
   optional int32 maxQuantity = 5 [default = 0];
   optional Rarity rarity = 6 [default = ONE_STAR];
   optional StatMod stat_mod = 7;
}
message CampaignElementIdentifier {
   optional string campaign_id = 1 [default = ""];
   optional string campaign_map_id = 2 [default = ""];
   optional string campaign_node_id = 3 [default = ""];
   optional CampaignNodeDifficulty campaign_node_difficulty = 4 [default = NOT_SET];
   optional string campaign_mission_id = 5 [default = ""];
}
enum CampaignNodeDifficulty {
   NOT_SET = 0;
   NORMAL_DIFF = 4;
   HARD_DIFF = 5;
   NIGHTMARE_DIFF = 6;
   SPECIAL_DIFF = 7;
   I_DIFF = 8;
   II_DIFF = 9;
   III_DIFF = 10;
   IV_DIFF = 11;
   V_DIFF = 12;
   VI_DIFF = 13;
}
enum CategoryMatchType {
   MATCH_ALL = 1;
   MATCH_ANY = 2;
}
message CurrencyItem {
   optional CurrencyType currency = 1 [default = GRIND];
   optional int32 quantity = 2 [default = 0];
}
enum CurrencyType {
   GRIND = 1;
   PREMIUM = 2;
   REAL_MONEY = 3;
   SOCIAL = 4;
   IGC_EVENT_KEYCARD = 8;
   XP_EVENT_KEYCARD = 9;
   PVP_CURRENCY = 10;
   FORCE_POINT = 11;
   PVP_SHIP_CURRENCY = 12;
   FREE = 13;
   WAR_SHIP_CURRENCY = 14;
   GRIND_TICKET = 15;
   SHARD_CURRENCY = 16;
   GUILD_CURRENCY = 17;
   GUILD_BANK_CURRENCY = 18;
   SHIP_GRIND = 19;
   GUILD_RAID_CURRENCY_01 = 20;
   GUILD_RAID_CURRENCY_02 = 21;
   GUILD_RAID_CURRENCY_03 = 22;
   GUILD_RAID_CURRENCY_04 = 23;
   GUILD_RAID_CURRENCY_05 = 24;
   GUILD_RAID_CURRENCY_06 = 25;
   GUILD_RAID_CURRENCY_07 = 26;
   GUILD_RAID_CURRENCY_08 = 27;
   GUILD_RAID_CURRENCY_09 = 28;
   GUILD_RAID_CURRENCY_10 = 29;
   GUILD_RAID_CURRENCY_11 = 30;
   GUILD_RAID_CURRENCY_12 = 31;
}
message EntryCategoryAllowed {
   repeated string category_id = 1;
   optional int32 maximum_allowed_unit_quantity = 2 [default = 0];
   optional CategoryMatchType match_type = 3 [default = MATCH_ANY];
   optional int32 minimum_required_unit_quantity = 4 [default = 0];
   optional Rarity minimum_unit_rarity = 5 [default = NO_STAR];
   optional int32 minimum_owned_unit_quantity = 6 [default = 0];
   optional int32 minimum_unit_level = 7 [default = 0];
   optional UnitTier minimum_unit_tier = 8 [default = TIER_01];
   optional int32 maximum_reinforcement = 9 [default = 0];
}
message GameEventInstance {
   optional string id = 1 [default = ""];
   optional int64 start_time = 2 [default = 0];
   optional int64 end_time = 3 [default = 0];
   optional int64 display_start_time = 4 [default = 0];
   optional int64 display_end_time = 5 [default = 0];
   optional bool time_limited = 6 [default = false];
   optional CampaignElementIdentifier campaign_element_identifier = 7;
   repeated BucketItem reward_preview = 8;
   repeated RankRewardPreview rank_reward_preview = 9;
   optional EntryCategoryAllowed entry_category_allowed = 10;
   optional int32 defensive_squad_size = 11 [default = 0];
   optional string unit_daily_usage_cap_key = 12 [default = ""];
   optional int64 roster_refresh_time = 13 [default = 0];
   optional bool joined = 14 [default = false];
   optional string summary_key = 15 [default = ""];
   optional int64 reward_time = 16 [default = 0];
   optional int64 defensive_squad_save_time_limit = 17 [default = 0];
}
enum ItemType {
   EMPTY = 1;
   UNIT = 2;
   CURRENCY = 3;
   BUCKET = 4;
   CONSUMABLE = 5;
   XP = 6;
   MATERIAL = 7;
   ENERGY = 8;
   UNIT_SHARD = 9;
   RECIPE = 10;
   EQUIPMENT = 11;
   EVENT_KEYCARD = 12;
   POWERUP_BUNDLE = 13;
   MYSTERY_BOX = 14;
   STAT_MOD = 15;
   MYSTERY_STAT_MOD = 16;
}
message RankRewardPreview {
   optional int32 rank_start = 1 [default = 0];
   optional int32 rank_end = 2 [default = 0];
   repeated BucketItem primary_reward = 3;
   repeated BucketItem detailed_reward = 4;
}
enum Rarity {
   ONE_STAR = 1;
   TWO_STAR = 2;
   THREE_STAR = 3;
   FOUR_STAR = 4;
   FIVE_STAR = 5;
   SIX_STAR = 6;
   SEVEN_STAR = 7;
   NO_STAR = 8;
}
message Stat {
   optional string stat_id = 1 [default = ""];
   optional UnitStat unit_stat_id = 3 [default = UNIT_STAT_MAX_HEALTH];
   optional int32 stat_value_decimal_old = 4 [default = 0];
   optional int64 stat_value_decimal = 5 [default = 0];
}
message StatMod {
   optional string id = 1 [default = ""];
   optional string definition_id = 2 [default = ""];
   optional int32 level = 4 [default = 0];
   optional StatModTier tier = 5 [default = STATMOD_TIER_01];
   optional CurrencyItem sell_value = 9;
   optional CurrencyItem remove_cost = 10;
   optional bool locked = 11 [default = false];
   optional StatModStat primary_stat = 12;
   repeated StatModStat secondary_stat = 13;
   optional int32 xp = 14 [default = 0];
   optional CurrencyItem level_cost = 15;
}
message StatModStat {
   optional string updater_id = 1 [default = ""];
   optional Stat stat = 2;
   repeated string roll = 3;
}
enum StatModTier {
   STATMOD_TIER_01 = 1;
   STATMOD_TIER_02 = 2;
   STATMOD_TIER_03 = 3;
   STATMOD_TIER_04 = 4;
   STATMOD_TIER_05 = 5;
}
enum UnitStat {
   UNIT_STAT_MAX_HEALTH = 1;
   UNIT_STAT_STRENGTH = 2;
   UNIT_STAT_AGILITY = 3;
   UNIT_STAT_INTELLIGENCE = 4;
   UNIT_STAT_SPEED = 5;
   UNIT_STAT_ATTACK_DAMAGE = 6;
   UNIT_STAT_ABILITY_POWER = 7;
   UNIT_STAT_ARMOR = 8;
   UNIT_STAT_SUPPRESSION = 9;
   UNIT_STAT_ARMOR_PENETRATION = 10;
   UNIT_STAT_SUPPRESSION_PENETRATION = 11;
   UNIT_STAT_DODGE_RATING = 12;
   UNIT_STAT_DEFLECTION_RATING = 13;
   UNIT_STAT_ATTACK_CRITICAL_RATING = 14;
   UNIT_STAT_ABILITY_CRITICAL_RATING = 15;
   UNIT_STAT_CRITICAL_DAMAGE = 16;
   UNIT_STAT_ACCURACY = 17;
   UNIT_STAT_RESISTANCE = 18;
   UNIT_STAT_DODGE_PERCENT_ADDITIVE = 19;
   UNIT_STAT_DEFLECTION_PERCENT_ADDITIVE = 20;
   UNIT_STAT_ATTACK_CRITICAL_PERCENT_ADDITIVE = 21;
   UNIT_STAT_ABILITY_CRITICAL_PERCENT_ADDITIVE = 22;
   UNIT_STAT_ARMOR_PERCENT_ADDITIVE = 23;
   UNIT_STAT_SUPPRESSION_PERCENT_ADDITIVE = 24;
   UNIT_STAT_ARMOR_PENETRATION_PERCENT_ADDITIVE = 25;
   UNIT_STAT_SUPPRESSION_PENETRATION_PERCENT_ADDITIVE = 26;
   UNIT_STAT_HEALTH_STEAL = 27;
   UNIT_STAT_MAX_SHIELD = 28;
   UNIT_STAT_SHIELD_PENETRATION = 29;
   UNIT_STAT_HEALTH_REGEN = 30;
   UNIT_STAT_ATTACK_DAMAGE_PERCENT_ADDITIVE = 31;
   UNIT_STAT_ABILITY_POWER_PERCENT_ADDITIVE = 32;
   UNIT_STAT_DODGE_NEGATE_PERCENT_ADDITIVE = 33;
   UNIT_STAT_DEFLECTION_NEGATE_PERCENT_ADDITIVE = 34;
   UNIT_STAT_ATTACK_CRITICAL_NEGATE_PERCENT_ADDITIVE = 35;
   UNIT_STAT_ABILITY_CRITICAL_NEGATE_PERCENT_ADDITIVE = 36;
   UNIT_STAT_DODGE_NEGATE_RATING = 37;
   UNIT_STAT_DEFLECTION_NEGATE_RATING = 38;
   UNIT_STAT_ATTACK_CRITICAL_NEGATE_RATING = 39;
   UNIT_STAT_ABILITY_CRITICAL_NEGATE_RATING = 40;
   UNIT_STAT_OFFENSE = 41;
   UNIT_STAT_DEFENSE = 42;
   UNIT_STAT_DEFENSE_PENETRATION = 43;
   UNIT_STAT_EVASION_RATING = 44;
   UNIT_STAT_CRITICAL_RATING = 45;
   UNIT_STAT_EVASION_NEGATE_RATING = 46;
   UNIT_STAT_CRITICAL_NEGATE_RATING = 47;
   UNIT_STAT_OFFENSE_PERCENT_ADDITIVE = 48;
   UNIT_STAT_DEFENSE_PERCENT_ADDITIVE = 49;
   UNIT_STAT_DEFENSE_PENETRATION_PERCENT_ADDITIVE = 50;
   UNIT_STAT_EVASION_PERCENT_ADDITIVE = 51;
   UNIT_STAT_EVASION_NEGATE_PERCENT_ADDITIVE = 52;
   UNIT_STAT_CRITICAL_CHANCE_PERCENT_ADDITIVE = 53;
   UNIT_STAT_CRITICAL_NEGATE_CHANCE_PERCENT_ADDITIVE = 54;
   UNIT_STAT_MAX_HEALTH_PERCENT_ADDITIVE = 55;
   UNIT_STAT_MAX_SHIELD_PERCENT_ADDITIVE = 56;
   UNIT_STAT_SPEED_PERCENT_ADDITIVE = 57;
   UNIT_STAT_COUNTER_ATTACK_RATING = 58;
   UNIT_STAT_TAUNT = 59;
}
enum UnitTier {
   TIER_01 = 1;
   TIER_02 = 2;
   TIER_03 = 3;
   TIER_04 = 4;
   TIER_05 = 5;
   TIER_06 = 6;
   TIER_07 = 7;
   TIER_08 = 8;
   TIER_09 = 9;
   TIER_10 = 10;
   TIER_11 = 11;
   TIER_12 = 12;
   TIER_13 = 13;
   TIER_14 = 14;
   TIER_15 = 15;
   TIER_16 = 16;
   TIER_17 = 17;
   TIER_18 = 18;
   TIER_19 = 19;
   TIER_20 = 20;
}
